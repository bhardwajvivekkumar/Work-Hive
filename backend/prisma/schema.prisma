// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String        @id @default(uuid())
  name        String
  email       String        @unique
  password    String
  phoneNumber String
  role        Role
  profile     Profile?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  company     Company[]
  Application Application[]
  postedJobs  Job[]
}

model Profile {
  id                 String   @id @default(uuid())
  user               User     @relation(fields: [userId], references: [id])
  userId             String   @unique
  bio                String
  skills             String[]
  resume             String?
  resumeOriginalName String?
  profilePhoto       String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Company {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  jobs        Job[]
  name        String
  description String
  website     String
  location    String
  logo        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Job {
  id              String        @id @default(uuid())
  title           String
  description     String
  requirements    String[]
  salary          Float
  experienceLevel Int
  location        String
  jobType         String
  position        Int
  company         Company       @relation(fields: [companyId], references: [id])
  companyId       String
  createdBy       User          @relation(fields: [createdById], references: [id])
  createdById     String
  applications    Application[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model Application {
  id          String   @id @default(uuid())
  applicant   User     @relation(fields: [applicantId], references: [id])
  applicantId String
  status      Status   @default(Pending)
  job         Job      @relation(fields: [jobId], references: [id])
  jobId       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Status {
  Pending
  Accepted
  Rejected
}

enum Role {
  Student
  Recruiter
}
